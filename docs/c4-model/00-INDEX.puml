@startuml CampHost C4 Model Index
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

' ============================================================================
' CampHost System - C4 Model Architecture Documentation
' ============================================================================
'
' 이 파일은 CampHost 시스템의 C4 Model 다이어그램의 시작점입니다.
' LLM Agent (Claude)가 아키텍처를 파악할 때 가장 먼저 참조하는 파일입니다.
'
' 📂 디렉토리 구조:
' docs/c4-model/
' ├── 00-INDEX.puml               ⭐ 시작점 (현재 파일)
' ├── lv1-system-context/         Level 1: System Context
' │   └── system.puml
' ├── lv2-containers/             Level 2: Containers
' │   └── overview.puml
' ├── lv3-components/             Level 3: Components
' │   ├── webapp.puml
' │   └── api.puml
' └── lv4-code/                  Level 4: Code (필요시)
'     └── services/
'
' 📖 사용 방법:
' 1. Epic/Task 분석 시: 이 파일을 먼저 읽어 시스템 구조 파악
' 2. 영향 범위 파악: lv1 → lv2 → lv3 → lv4 순서로 탐색
' 3. 코드 수정 후: 각 레벨의 다이어그램 동기화 확인
'
' ============================================================================

title CampHost System - C4 Model Overview

legend top
  **CampHost**: 오도이촌 캠핑장 무인 운영 시스템

  **시스템 개요**:
  - Next.js 14.2 기반 웹 애플리케이션
  - Supabase (PostgreSQL) 데이터베이스
  - Resend 이메일 서비스 통합

  **주요 사용자**:
  - Super Admin: 전체 캠핑장 관리
  - Campground Admin: 개별 캠핑장 관리
  - Camper: 무인 체크인/체크아웃

  **다이어그램 레벨**:
  - Level 1: System Context → lv1-system-context/system.puml
  - Level 2: Containers → lv2-containers/overview.puml
  - Level 3: Components → lv3-components/*.puml
  - Level 4: Code → lv4-code/**/*.puml
end legend

' ============================================================================
' Level 1: System Context
' ============================================================================
'
' 📄 파일: lv1-system-context/system.puml
'
' 시스템과 외부 액터(사용자, 외부 시스템)의 관계를 표현합니다.
'
' 주요 내용:
' - Person: Super Admin, Campground Admin, Camper
' - System: CampHost
' - System_Ext: Supabase, Resend
' - Relationships: 각 액터와 시스템 간 상호작용
'
' 🔗 다음 레벨: lv2-containers/overview.puml

' ============================================================================
' Level 2: Containers
' ============================================================================
'
' 📄 파일: lv2-containers/overview.puml
'
' CampHost 시스템 내부의 주요 컨테이너(실행 단위)를 표현합니다.
'
' 주요 컨테이너:
' - Web Application (Next.js 14.2)
'   - 사용자 인터페이스 제공
'   - SSR/SSG 지원
'   - 클라이언트 사이드 라우팅
'
' - REST API (Next.js API Routes)
'   - 비즈니스 로직 처리
'   - 외부 서비스 통합
'   - 인증 및 권한 검증
'
' - Browser Storage (localStorage)
'   - 오프라인 지원
'   - 데이터 캐싱
'   - 세션 관리
'
' 🔗 다음 레벨: lv3-components/*.puml

' ============================================================================
' Level 3: Components
' ============================================================================
'
' 📄 파일들:
' - lv3-components/services.puml: Services Layer 컴포넌트 (NEW)
'   - CacheManager (lib/cache.ts) - Smart Caching
'   - CampgroundService
'   - SupabaseRest
'
' Services Layer 컴포넌트:
' - CacheManager (lib/cache.ts)
'   - TTL 기반 캐싱 관리자
'   - 5분 TTL, Cache-First 전략
'   - 자동 만료 및 갱신
' - CampgroundService (lib/campground.ts)
'   - 캠핑장 데이터 관리
' - SupabaseRest (src/services/supabaseRest.ts)
'   - Supabase REST API 클라이언트
'
' 🔗 다음 레벨: lv4-code/**/*.puml

' ============================================================================
' Level 4: Code (필요시 작성)
' ============================================================================
'
' 📄 예상 파일들:
' - lv4-code/services/campground-service.puml
' - lv4-code/services/reservation-service.puml
' - lv4-code/hooks/use-campgrounds.puml
'
' 각 서비스와 훅의 클래스 다이어그램, 메서드, 속성을 표현합니다.
'
' ⚠️ 현재는 Level 3까지만 작성하며, 필요시 추가합니다.

' ============================================================================
' 다이어그램 동기화 체크리스트
' ============================================================================
'
' Epic/Task 완료 후 Claude가 확인해야 할 사항:
'
' □ Level 1 (lv1-system-context/system.puml)
'   - 새로운 외부 시스템 추가 시: System_Ext 추가
'   - 사용자 역할 변경 시: Person 수정
'
' □ Level 2 (lv2-containers/overview.puml)
'   - 새로운 실행 단위 추가 시: Container 추가
'   - 컨테이너 간 관계 변경 시: Rel 수정
'
' □ Level 3 (lv3-components/*.puml)
'   - 새로운 UI 페이지 추가 시: Component 추가
'   - 서비스/훅 추가 시: Component 및 Rel 수정
'
' □ Level 4 (lv4-code/**/*.puml)
'   - 클래스/인터페이스 추가 시: 해당 다이어그램 업데이트

' ============================================================================
' 렌더링 방법
' ============================================================================
'
' 1. PlantUML CLI:
'    plantuml docs/c4-model/lv1-system-context/system.puml
'
' 2. VS Code 확장:
'    - PlantUML 확장 설치
'    - Alt+D로 미리보기
'
' 3. Online:
'    - http://www.plantuml.com/plantuml/uml/

@enduml
